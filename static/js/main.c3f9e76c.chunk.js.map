{"version":3,"sources":["assets/images/abra-navbar-logo.png","assets/images/currentForecastBackground.png","layout/navbar/NavbarLinks.js","components/ui/AutoFocusTextInput.js","app/classes/Api.js","utils/displayErrorMessage.js","app/services/weatherApi.js","feature/locationSlice.js","components/autoComplete/AutoCompleteResultsListItem.js","components/autoComplete/AutoCompleteResultsList.js","components/autoComplete/AutoCompleteModal.js","layout/navbar/NavbarSearch.js","context/ColorModeContext.js","layout/navbar/Navbar.js","layout/Footer.js","layout/Layout.js","feature/forecastSlice.js","hooks/useToggleTemperatureUnit.js","utils/getWeatherIconPath.js","feature/favoriteSlice.js","components/dashboard/DashboardHeader.js","utils/convertFahrenheitToCelsius.js","components/dashboard/DashboardTable.js","components/dashboard/DashboardBody.js","pages/Home.js","hooks/useGeolocation.js","components/favoriteCard/FavoriteCard.js","pages/Favorite.js","pages/Page404.js","App.js","app/store.js","index.js"],"names":["module","exports","__webpack_require__","p","mainStyle","textDecoration","color","activeStyle","Object","objectSpread","fontWeight","unActiveStyle","NavLink","propTypes","pages","PropTypes","array","themeMode","string","NavbarLinks","_ref","textColor","react_default","a","createElement","Fragment","map","page","index","react_router_dom","key","style","_ref2","isActive","to","path","label","AutoFocusTextInput","props","inputRef","useRef","useEffect","timeout","setTimeout","current","focus","clearTimeout","InputBase","assign","Api","params","apikey","process","displayErrorMessage","Swal","fire","icon","title","text","api","axios","create","baseURL","weatherApi","geolocation","keys","length","get","this","returnWithWeatherApiKeyParameter","q","concat","latitude","longitude","response","locationName","locationKey","numberOfDays","fetchLocationsByName","createAsyncThunk","asyncToGenerator","locationSlice_regeneratorRuntime","mark","_callee","name","rejectWithValue","wrap","_context","prev","next","sent","abrupt","data","t0","stop","_x","_x2","apply","arguments","setCurrentLocationByName","_ref4","_callee2","_ref3","_context2","_x3","_x4","locationSlice","createSlice","initialState","isLoading","error","currentLocation","LocalizedName","Country","locations","reducers","clearLocations","state","clearLocationByIndex","_ref5","payload","splice","setCurrentLocation","_ref6","extraReducers","builder","addCase","pending","fulfilled","_ref7","rejected","_ref8","_ref9","_ref10","actions","listItemStyle","maxWidth","bgcolor","borderBottom","cursor","flagIconStyle","objectFit","marginLeft","marginRight","AutoCompleteResultsItem","item","handleCloseModal","dispatch","useDispatch","navigate","useNavigate","ListItem","onClick","sx","theme","&:hover","palette","primary","main","border","borderRadius","backgroundColor","secondaryAction","IconButton","edge","Clear_default","dist","code","ID","size","ListItemText","secondary","AdministrativeArea","ListWrapperStyle","width","AutoCompleteResults","_ref$list","list","openModal","descriptionElementRef","descriptionElement","DialogContentText","ref","List","AutoCompleteResultsListItem","searchBarStyle","display","alignItems","dialogContentStyle","minWidth","minHeight","paddingTop","AutoCompleteModal","useTheme","fullScreen","useMediaQuery","breakpoints","down","_useSelector","useSelector","_useState","useState","_useState2","slicedToArray","inputValue","setInputValue","timeoutId","Dialog","open","onClose","PaperProps","overflow","DialogTitle","CircularProgress","Search_default","ui_AutoFocusTextInput","value","onChange","e","target","ml","flex","paddingRight","placeholder","DialogContent","dividers","AutoCompleteResultsList","modalButtonStyle","fontSize","alignItem","justifyContent","height","padding","NavbarSearch","isMobile","setOpenModal","handleOpenModal","Button","startIcon","autoComplete_AutoCompleteModal","ColorModeContext","createContext","toggleColorMode","mode","ColorModeContextProvider","children","setMode","colorMode","useMemo","prevMode","createTheme","components","MuiAppBar","styleOverrides","colorPrimary","deepPurple","navbar","Provider","ThemeProvider","useStyles","makeStyles","mobileLayout","logo","linksWrapper","flexGrow","Navbar","classes","anchorElNav","setAnchorElNav","_useContext","useContext","handleCloseNavMenu","Box","AppBar","background","component","Toolbar","className","Menu_default","event","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","xs","md","MenuItem","Typography","textAlign","src","alt","navbar_NavbarLinks","navbar_NavbarSearch","Brightness4_default","Brightness7_default","Footer","Divider","Layout","CssBaseline","navbar_Navbar","Container","xl","react_router","layout_Footer","fetchDaysForecastsByLocationKeyAndDays","forecastSlice_regeneratorRuntime","fetchLocationCurrentConditionsByLocationKey","forecastSlice","currentForecast","Temperature","Metric","Imperial","WeatherIcon","forecastByDays","Array","isArray","DailyForecasts","useToggleTemperatureUnit","defaultValue","undefined","setValue","_useState3","_useState4","symbol","setSymbol","currentValue","getWeatherIconPath","iconNumber","JSON","parse","localStorage","getItem","stringify","favoriteSlice","addToFavorite","push","setItem","removeFromFavorite","findIndex","el","Key","clearAllFavorite","removeItem","dashboardHeaderWrapper","maxHeight","mb","dashboardHeaderMobileWrapper","flexDirection","currentForecastStyle","backgroundImage","currentForecastBackground","position","pt","dashboardActionStyle","dashboardActionMobileStyle","mt","imageStyle","top","temperatureStyle","DashboardHeader","temperatureSymbol","temperatureUnit","toggleTemperatureUnit","favorite","isSavedInLocalStorage","some","Paper","elevation","variant","moment","LocalObservationDateTime","calendar","Value","WeatherText","DeviceThermostat_default","Remove_default","Add_default","convertFahrenheitToCelsius","fahrenheit","Math","round","tableHeaderValues","DashboardTable","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","dayForecast","Date","format","Day","Icon","IconPhrase","Night","Minimum","Maximum","tabWrapperStyle","borderColor","DashboardBody","daysOfForecast","setDaysOfForecast","Tabs","Tab","disabled","dashboard_DashboardTable","homeWrapperStyle","Home","_state$forecast","forecast","_useToggleTemperature","_useToggleTemperature2","geolocationRender","_useGeolocation","lat","setLat","lng","setLng","_useState5","_useState6","status","setStatus","getLocation","useCallback","navigator","getCurrentPosition","coords","useGeolocation","_useGeolocation2","geolocationStatus","isHomePageInit","dispatchCurrentLocationActions","initialApplicationByGeolocation","Home_regeneratorRuntime","_currentLocation","fetchLocationKeyByGeolocation","initialApplicationByDefaultLocation","dashboard_DashboardHeader","dashboard_DashboardBody","cardStyle","FavoriteCard","setCurrentForecast","fetchCurrentForecast","FavoriteCard_regeneratorRuntime","_yield$weatherApi$fet","Card","CardContent","gutterBottom","CardActions","DeleteOutline_default","favoriteStyle","py","containerStyle","Favorite","mr","Dangerous_default","Grid","container","spacing","lg","favoriteCard_FavoriteCard","Page404","App","element","layout_Layout","pages_Home","pages_Favorite","pages_Page404","store","configureStore","reducer","locationReducer","forecastReducer","favoriteReducer","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","ColorModeContext_ColorModeContextProvider","src_App"],"mappings":"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","file":"static/js/main.c3f9e76c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/abra-navbar-logo.86e01540.png\";","module.exports = __webpack_public_path__ + \"static/media/currentForecastBackground.44319328.png\";","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst mainStyle = {\r\n  textDecoration: \"none\",\r\n  color: \"#121F3F\"\r\n}\r\n\r\nconst activeStyle = {\r\n  ...mainStyle,\r\n  fontWeight: 700\r\n}\r\n\r\nconst unActiveStyle = {\r\n  ...mainStyle,\r\n}\r\n\r\n\r\nconst NavbarLinks = ({pages, themeMode}) => {\r\n\r\n  const textColor = themeMode === 'light' ? '#121F3F' : '#F9F9F9'\r\n\r\n  return (\r\n    <>\r\n      {pages.map((page, index) => (\r\n        <NavLink key={index} style={({ isActive }) =>\r\n          isActive ? {...activeStyle, color: textColor} : {...unActiveStyle, color: textColor }\r\n        } to={page.path}  >\r\n            {page.label}\r\n        </NavLink>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nNavLink.propTypes = {\r\n  pages: PropTypes.array,\r\n  themeMode: PropTypes.string\r\n}\r\n\r\nexport default NavbarLinks","import React, { useRef, useEffect } from 'react'\r\nimport { InputBase } from \"@mui/material\"\r\n\r\nconst AutoFocusTextInput = (props) => {\r\n    const inputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            inputRef.current.focus();\r\n        }, 100)\r\n\r\n        return () => {\r\n            clearTimeout(timeout)\r\n        }\r\n    })\r\n\r\n  return (\r\n    <InputBase inputRef={inputRef} {...props} />\r\n  )\r\n}\r\n\r\nexport default AutoFocusTextInput","class Api {\r\n\r\n    returnWithWeatherApiKeyParameter(params){\r\n        return {apikey: process.env.REACT_APP_WEATHER_API_KEY, ...params}\r\n    }\r\n}\r\n\r\nexport default Api","import Swal from 'sweetalert2'\r\n\r\nexport default () => Swal.fire({\r\n    icon: 'error',\r\n    title: 'Oops...',\r\n    text: 'Something went wrong!',\r\n})","import axios from \"axios\"\r\nimport Api from \"../classes/Api.js\"\r\nimport displayErrorMessage from \"../../utils/displayErrorMessage\"\r\n\r\nconst api = axios.create({\r\n    baseURL: process.env.REACT_APP_WEATHER_BASE_URL\r\n})\r\n\r\n\r\nclass WeatherApi extends Api {\r\n\r\n    async fetchLocationKeyByGeolocation (geolocation) {\r\n        try {\r\n            if (geolocation === null || Object.keys(geolocation).length === 0) return null\r\n            const response = await api.get('/locations/v1/cities/geoposition/search', {\r\n                params: this.returnWithWeatherApiKeyParameter({ q: `${geolocation.latitude},${geolocation.longitude}` })\r\n            })\r\n            return response\r\n\r\n        } catch (error) {\r\n            displayErrorMessage()\r\n            throw error\r\n        }\r\n    }\r\n\r\n    async fetchLocationsByName(locationName){\r\n        try {\r\n            const response = await api.get('/locations/v1/cities/autocomplete', {\r\n                params: this.returnWithWeatherApiKeyParameter({ q: locationName })\r\n            })\r\n            return response        \r\n        } catch (error) {\r\n            displayErrorMessage()\r\n            throw error\r\n        }\r\n    }\r\n\r\n    async fetchLocationCurrentConditionsByLocationKey(locationKey){\r\n        try {\r\n            const response = await api.get(`/currentconditions/v1/${locationKey}`, {\r\n                params: this.returnWithWeatherApiKeyParameter()\r\n            })\r\n            return response\r\n        } catch (error) {\r\n            displayErrorMessage()\r\n            throw error\r\n        }\r\n    }\r\n\r\n    async fetchDaysForecastsByLocationKeyAndDays(locationKey, numberOfDays = 5){\r\n        try {\r\n            const response = await api.get(`/forecasts/v1/daily/${numberOfDays}day/${locationKey}`, {\r\n                params: this.returnWithWeatherApiKeyParameter()\r\n            })\r\n            return response\r\n        } catch (error) {\r\n            displayErrorMessage()\r\n            throw error\r\n        }\r\n    }\r\n}\r\n\r\nexport default new WeatherApi()","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport weatherApi from \"../app/services/weatherApi\";\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    error: null,\r\n    currentLocation: {\r\n      LocalizedName: '',\r\n      Country: {\r\n        LocalizedName: ''\r\n      }\r\n    },\r\n    locations: []\r\n} \r\n\r\nexport const fetchLocationsByName = createAsyncThunk(\r\n    'locations/fetchByName',\r\n    async (name, { rejectWithValue }) => {\r\n        try {\r\n            const response = await weatherApi.fetchLocationsByName(name)\r\n            return response.data\r\n        } catch (error) {\r\n            rejectWithValue(error.response.data)\r\n        }\r\n    }\r\n)\r\n\r\nexport const setCurrentLocationByName = createAsyncThunk(\r\n    'locations/setCurrentLocation',\r\n    async (name, { rejectWithValue }) => {\r\n        try {\r\n            const response = await weatherApi.fetchLocationsByName(name)\r\n            return response.data\r\n        } catch (error) {\r\n            rejectWithValue(error)\r\n        }\r\n    }\r\n)\r\n\r\nconst locationSlice = createSlice({\r\n    name: 'locations',\r\n    initialState,\r\n    reducers: {\r\n        clearLocations: (state) => {\r\n            state.locations = []\r\n        },\r\n        clearLocationByIndex: (state, {payload: index}) => {\r\n          state.locations.splice(index, 1)\r\n        },\r\n        setCurrentLocation:(state, {payload}) => {\r\n          state.currentLocation = payload\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(fetchLocationsByName.pending, (state) => {\r\n            state.isLoading = true;\r\n            })\r\n            .addCase(fetchLocationsByName.fulfilled, (state, { payload }) => {\r\n                state.isLoading = false\r\n                state.locations = payload\r\n                state.error = null \r\n            })\r\n            .addCase(fetchLocationsByName.rejected, (state, { payload }) => {\r\n                state.isLoading = false;\r\n                state.error = payload\r\n            })\r\n            .addCase(setCurrentLocationByName.pending, (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(setCurrentLocationByName.fulfilled, (state, { payload }) => {\r\n                state.isLoading = false;\r\n                state.currentLocation = payload[0]\r\n                state.error = null\r\n            })\r\n            .addCase(setCurrentLocationByName.rejected, (state, { payload }) => {\r\n                state.isLoading = false;\r\n                state.error = payload\r\n            })\r\n    }\r\n})\r\n\r\nexport const { clearLocations, clearLocationByIndex, setCurrentLocation } = locationSlice.actions\r\nexport default locationSlice.reducer","import React from 'react'\r\nimport { ListItem, ListItemText, IconButton   } from \"@mui/material\"\r\nimport { FlagIcon } from \"react-flag-kit\";\r\nimport PropTypes from \"prop-types\"\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport { useDispatch } from 'react-redux/es/exports';\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { clearLocationByIndex, setCurrentLocation } from '../../feature/locationSlice';\r\n\r\nconst listItemStyle = {\r\n    maxWidth: 600,\r\n    bgcolor: 'background.paper',\r\n    p: '10px',\r\n    borderBottom: '1px solid rgba(117, 117, 117, 0.1)',\r\n    cursor: 'pointer'\r\n}\r\n\r\nconst flagIconStyle = { \r\n  objectFit: 'contain',\r\n  marginLeft: '10px',\r\n  marginRight: '20px'\r\n}\r\n\r\n\r\nconst AutoCompleteResultsItem = ({ item, index, handleCloseModal }) => {\r\n  const dispatch = useDispatch()\r\n  let navigate = useNavigate();\r\n\r\n  const handleItemClick = () => {\r\n    dispatch(setCurrentLocation(item))\r\n    navigate('/home')\r\n    handleCloseModal()\r\n  }\r\n\r\n  return (\r\n    <ListItem onClick={handleItemClick} sx={[listItemStyle, (theme) => ({\r\n      '&:hover': {\r\n        color: theme.palette.primary.main,\r\n        border: `1px solid ${theme.palette.primary.main}`,\r\n        borderRadius: '12px',\r\n        backgroundColor: '#ede7f6'\r\n      }\r\n    })]}\r\n      secondaryAction={\r\n        <IconButton onClick={() => dispatch(clearLocationByIndex(index))} edge=\"end\" >\r\n          <ClearIcon/>\r\n        </IconButton>\r\n      }>\r\n      <FlagIcon code={item.Country.ID} size={50} style={flagIconStyle} />\r\n      <ListItemText \r\n        primary={`${item.LocalizedName}, ${item.Country.LocalizedName}`}\r\n        secondary={item.AdministrativeArea.LocalizedName} />\r\n  </ListItem>\r\n  )\r\n}\r\n\r\nAutoCompleteResultsItem.propTypes = {\r\n    item: PropTypes.object,\r\n    index: PropTypes.number,\r\n    handleCloseModal: PropTypes.func\r\n}\r\n\r\nexport default AutoCompleteResultsItem","import React, { useRef, useEffect } from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport {  List, DialogContentText} from \"@mui/material\"\r\nimport AutoCompleteResultsItem from './AutoCompleteResultsListItem'\r\nimport { useDispatch } from 'react-redux'\r\nimport { clearLocations } from '../../feature/locationSlice'\r\n\r\n\r\nconst ListWrapperStyle = {\r\n  width: '100%',\r\n  bgcolor: 'background.paper'\r\n}\r\n\r\n\r\nconst AutoCompleteResults = ({ list = [], openModal, handleCloseModal }) => {\r\n  const descriptionElementRef = useRef(null);\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (openModal) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      if(!openModal) dispatch(clearLocations());\r\n    }\r\n  }, [openModal]);  \r\n\r\n\r\n  return (\r\n    <DialogContentText ref={descriptionElementRef}>\r\n    <List sx={ListWrapperStyle} >\r\n      {list.map((item, index) => (\r\n        <>\r\n          <AutoCompleteResultsItem handleCloseModal={handleCloseModal} index={index} item={item} key={item.key} />\r\n        </>\r\n      ))}\r\n    </List>\r\n    </DialogContentText>\r\n  )\r\n}\r\n\r\nAutoCompleteResults.propTypes  = {\r\n  list: PropTypes.array,\r\n  openModal: PropTypes.bool,\r\n  handleCloseModal: PropTypes.func\r\n}\r\n\r\nexport default AutoCompleteResults","import React, { useEffect, useState } from 'react'\r\nimport { Dialog, DialogTitle,\r\n            DialogContent, useMediaQuery } from '@mui/material'\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { useTheme  } from \"@mui/styles\"\r\nimport PropTypes from \"prop-types\"\r\nimport AutoFocusTextInput from '../ui/AutoFocusTextInput'\r\nimport AutoCompleteResultsList from './AutoCompleteResultsList';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { fetchLocationsByName } from '../../feature/locationSlice';\r\n\r\nconst searchBarStyle = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: '100%'\r\n}\r\n\r\nconst dialogContentStyle= {\r\n    width: '100%',\r\n    minWidth: 600,\r\n    minHeight: 560,\r\n    paddingTop: 0  \r\n}\r\n\r\nconst AutoCompleteModal = ({ openModal, handleCloseModal }) => {\r\nconst theme = useTheme();\r\nconst dispatch = useDispatch();\r\nconst fullScreen = useMediaQuery(theme.breakpoints.down('md'));\r\nconst { isLoading, locations } = useSelector(state => state.locations)\r\nconst [ inputValue, setInputValue ] = useState('')\r\n\r\nuseEffect(() => {\r\n    let timeoutId\r\n    if(inputValue !== ''){\r\n        timeoutId = setTimeout(() => dispatch(fetchLocationsByName(inputValue)), 700);\r\n    }\r\n    return () => {\r\n        clearTimeout(timeoutId)\r\n    }\r\n}, [inputValue])\r\n\r\nconst handleCloseModalAndClearInput = () => {\r\n    handleCloseModal()\r\n    setInputValue('')\r\n}\r\n\r\n  return (\r\n    <Dialog\r\n        open={openModal}\r\n        onClose={handleCloseModal}\r\n        fullScreen={fullScreen}\r\n        PaperProps={{\r\n            sx: {\r\n                overflow: 'hidden'\r\n            }\r\n        }}\r\n    >\r\n        <DialogTitle sx={searchBarStyle}>\r\n            {isLoading ? <CircularProgress color=\"primary\" /> : <SearchIcon color=\"primary\"/> }\r\n            <AutoFocusTextInput value={inputValue} onChange={e => setInputValue(e.target.value)}  sx={{ ml: 1, flex: 1, paddingRight: '15px' }}\r\n            placeholder='Search Weather Location'\r\n            />\r\n        </DialogTitle>\r\n        <DialogContent  dividers sx={dialogContentStyle} >\r\n              <AutoCompleteResultsList handleCloseModal={handleCloseModalAndClearInput} list={locations} openModal={openModal} />\r\n        </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nAutoCompleteModal.propTypes = {\r\n    openModal: PropTypes.bool,\r\n    handleCloseModal: PropTypes.func\r\n}\r\n\r\nexport default AutoCompleteModal","import React, { useState } from 'react'\r\nimport { Button, IconButton } from \"@mui/material\"\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport PropTypes from \"prop-types\"\r\nimport AutoCompleteModal from '../../components/autoComplete/AutoCompleteModal';\r\n\r\nconst modalButtonStyle = {\r\n    color: 'rgba(0, 0, 0, 0.6)',\r\n    fontSize: '12px',\r\n    backgroundColor: '#F8F8F8',\r\n    width: '170px',\r\n    display: 'flex',\r\n    alignItem: 'center',\r\n    justifyContent: 'flex-start',\r\n    border: '1px solid rgba(0, 0, 0, 0.2)',\r\n    height: '30px',\r\n    borderRadius: '35px',\r\n    padding: '15px',\r\n    marginLeft: 'auto'\r\n}\r\n\r\nconst NavbarSearch = ({ isMobile }) => {\r\n    const [openModal, setOpenModal] = useState(false)\r\n    const handleOpenModal = () => setOpenModal(true)\r\n    const handleCloseModal = () => setOpenModal(false)\r\n\r\n  return (\r\n    <>\r\n      { isMobile ?\r\n      <IconButton onClick={handleOpenModal} >\r\n        <SearchIcon/>\r\n      </IconButton>\r\n      :\r\n        <Button \r\n            onClick={handleOpenModal}  \r\n            startIcon={ <SearchIcon color=\"primary\" /> } \r\n            style={modalButtonStyle}>\r\n                Search...\r\n        </Button>\r\n      }\r\n        <AutoCompleteModal openModal={openModal} handleCloseModal={handleCloseModal} />\r\n    </>\r\n  )\r\n}\r\n\r\nNavbarSearch.propTypes = {\r\n  isMobile: PropTypes.bool\r\n}\r\n\r\nexport default NavbarSearch","import React, { useState, createContext, useMemo, useContext } from 'react'\r\nimport { createTheme, ThemeProvider  } from \"@mui/material/styles\";\r\nimport { deepPurple } from '@mui/material/colors';\r\n\r\nexport const ColorModeContext = createContext({\r\n    toggleColorMode: () => {},\r\n    mode: 'light'\r\n})\r\n\r\nexport const ColorModeContextProvider = ({ children }) => {\r\n    const [mode, setMode] = useState(\"light\")\r\n    const colorMode = useMemo(\r\n        () => ({\r\n            toggleColorMode: () => {\r\n                setMode(prevMode => prevMode === 'light' ? 'dark' : 'light')\r\n            },\r\n            mode\r\n        }),\r\n        [mode]\r\n    )\r\n\r\n    const theme = useMemo(\r\n        () => \r\n            createTheme({\r\n                components: {\r\n                    MuiAppBar: {\r\n                        styleOverrides: {\r\n                            colorPrimary: {    \r\n                                backgroundColor: \"#ffffff\"\r\n                            }\r\n                        }\r\n                    },\r\n                },\r\n                palette: {\r\n                    mode,\r\n                    primary: {\r\n                        main: deepPurple[500]\r\n                    },\r\n                    navbar: {\r\n                        main: '#ffffff',\r\n                    }\r\n                }\r\n            }),\r\n            [mode]\r\n    )\r\n\r\n    return (\r\n        <ColorModeContext.Provider value={colorMode} >\r\n            <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n        </ColorModeContext.Provider> \r\n    )\r\n}\r\n\r\nexport const useColorMode = () => useContext(ColorModeContext)\r\n","import React, { useState, useContext } from 'react'\r\nimport { AppBar, Box, Toolbar, useMediaQuery, IconButton, Menu, MenuItem, Typography } from \"@mui/material\"\r\nimport { makeStyles } from '@mui/styles';\r\nimport NavbarLinks  from \"./NavbarLinks\"\r\nimport logo from \"../../assets/images/abra-navbar-logo.png\"\r\nimport NavbarSearch from './NavbarSearch';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\r\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\r\nimport { ColorModeContext } from \"../../context/ColorModeContext\"\r\n\r\nconst pages = [{ path: \"/home\", label: \"HOME\" }, { path: \"/favorite\", label: \"FAVORITE\" }]\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  ({\r\n    mobileLayout: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between'\r\n    },\r\n    logo: {\r\n      maxWidth: '120px',\r\n      paddingRight: '10px',\r\n      marginLeft: '20px'\r\n    },\r\n    linksWrapper: {\r\n      flexGrow: 1,\r\n      display: 'flex',\r\n      marginLeft:'50px',\r\n      maxWidth: '200px',\r\n      justifyContent: 'space-around',\r\n    }\r\n  })\r\n)\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const isMobile = useMediaQuery(theme => theme.breakpoints.down('sm'))\r\n  let navigate = useNavigate();\r\n  const [anchorElNav, setAnchorElNav] = useState(null);\r\n  const { mode, toggleColorMode } = useContext(ColorModeContext)\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = (path) => {\r\n    navigate(path)\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  return (\r\n    <Box >\r\n        <AppBar  sx={{ background: mode === 'light' ? '#ffffff' : '#121212' }} component=\"nav\" >\r\n            <Toolbar className={isMobile ? classes.mobileLayout : ''} >\r\n              <Box>\r\n                <IconButton sx={{ display: isMobile ? 'block' : 'none' }}>\r\n                  <MenuIcon onClick={handleOpenNavMenu} />\r\n                </IconButton>\r\n                <Menu\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={() => handleCloseNavMenu(page.path)}>\r\n                  <Typography textAlign=\"center\">{page.label}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n              </Box>\r\n                <img className={classes.logo} src={logo} alt='abra_logo' />\r\n                <Box className={classes.linksWrapper} sx={{ display: isMobile ? 'none' : 'flex' }} >\r\n                  <NavbarLinks themeMode={mode} pages={pages} />\r\n                </Box>\r\n                <NavbarSearch isMobile={isMobile}/>\r\n                <IconButton onClick={toggleColorMode} sx={{ ml: 2 }} >\r\n                  {mode === 'light' ? <Brightness4Icon/> : <Brightness7Icon />}\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport { Divider, Box } from '@mui/material'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Box sx={{ width: '100%', textAlign: 'center', p:1, }} >\r\n      <Divider/>\r\n      Copyrights Tomer Avraham ©\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport Navbar from './navbar/Navbar'\r\nimport Footer from './Footer'\r\nimport { Outlet } from \"react-router-dom\"\r\nimport {Container, CssBaseline} from \"@mui/material\"\r\n\r\nconst Layout = ( ) => {\r\n  return (\r\n    <>\r\n      <CssBaseline/>\r\n      <Navbar/>\r\n      <Container sx={{ height: { xs: '170vh', md: '150vh', xl: 'auto' }, minHeight: '100vh'}} >\r\n        <Outlet/>\r\n      </Container>\r\n      <Footer/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Layout","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport weatherApi from \"../app/services/weatherApi\";\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    error: null,\r\n    currentForecast: {\r\n      Temperature: {\r\n        Metric: {},\r\n        Imperial: {},\r\n      },\r\n      WeatherIcon: 0\r\n    }\r\n    ,\r\n    forecastByDays: []\r\n}\r\n\r\nexport const fetchDaysForecastsByLocationKeyAndDays = createAsyncThunk(\r\n  'forecast/fetchDaysOfDailyForecast',\r\n  async ({locationKey, numberOfDays}, { rejectWithValue }) => {\r\n    try {\r\n      const response = await weatherApi.fetchDaysForecastsByLocationKeyAndDays(locationKey, numberOfDays)\r\n      return response.data\r\n    } catch (error) {\r\n      rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const fetchLocationCurrentConditionsByLocationKey = createAsyncThunk(\r\n    'forecast/fetchCurrentConditions', \r\n    async (locationKey, { rejectWithValue }) => {\r\n        try {\r\n            const response = await weatherApi.fetchLocationCurrentConditionsByLocationKey(locationKey)\r\n            return response.data\r\n        } catch (error) {\r\n            rejectWithValue(error.response.data)\r\n        }\r\n    }\r\n)\r\n\r\nconst forecastSlice = createSlice({\r\n    name: 'forecast',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(fetchLocationCurrentConditionsByLocationKey.pending, (state) => {\r\n            state.isLoading = true\r\n        })\r\n        .addCase(fetchLocationCurrentConditionsByLocationKey.fulfilled, (state, { payload }) => {\r\n            state.isLoading = false\r\n            state.error = null\r\n            state.currentForecast = Array.isArray(payload) ? payload[0] : payload\r\n        })\r\n        .addCase(fetchLocationCurrentConditionsByLocationKey.rejected, (state, {payload}) => {\r\n            state.isLoading = false\r\n            state.error = payload\r\n        })\r\n        .addCase(fetchDaysForecastsByLocationKeyAndDays.pending, (state) => {\r\n          state.isLoading = true\r\n        })\r\n        .addCase(fetchDaysForecastsByLocationKeyAndDays.fulfilled, (state, { payload }) => {\r\n          state.isLoading = false\r\n          state.error = null\r\n          state.forecastByDays = payload ? payload.DailyForecasts : []\r\n        })\r\n        .addCase(fetchDaysForecastsByLocationKeyAndDays.rejected, (state, { payload }) => {\r\n          state.isLoading = false\r\n          state.error = payload\r\n        })\r\n    }\r\n})\r\n\r\nexport default forecastSlice.reducer","import { useState } from \"react\";\r\n\r\nexport default function useToggleTemperatureUnit(defaultValue = \"Imperial\"){\r\n    const [value, setValue] = useState(defaultValue)\r\n    const [symbol, setSymbol] = useState(defaultValue === \"Imperial\" ? '℉' : '℃')\r\n\r\n    function toggleValue() {\r\n        setValue(currentValue => \r\n            currentValue === 'Imperial' ? 'Metric' : 'Imperial'    \r\n        )\r\n        setSymbol(currentValue =>\r\n            currentValue === \"℃\" ? '℉' : '℃'\r\n        )\r\n    }\r\n\r\n    return [value, symbol, toggleValue]\r\n}","export default (iconNumber) => {\r\n    return `/weatherIcons/${iconNumber}-s.png`\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    locations: JSON.parse(localStorage.getItem('favorite') || JSON.stringify([]))\r\n}\r\n\r\nconst favoriteSlice = createSlice({\r\n    name: 'favorite',\r\n    initialState,\r\n    reducers: {\r\n        addToFavorite: (state, {payload}) => {            \r\n            state.locations.push(payload)\r\n            localStorage.setItem(\"favorite\", JSON.stringify(state.locations))\r\n        },\r\n        removeFromFavorite: (state, {payload}) => {\r\n            const index =  state.locations.findIndex(el => el.Key === payload)\r\n            state.locations.splice(index, 1)\r\n            localStorage.setItem(\"favorite\", JSON.stringify(state.locations))\r\n        },\r\n        clearAllFavorite: (state) => {\r\n            state.locations = []\r\n            localStorage.removeItem('favorite')\r\n        }\r\n    }\r\n})\r\n\r\nexport default favoriteSlice.reducer\r\nexport const { addToFavorite, removeFromFavorite, clearAllFavorite } = favoriteSlice.actions","import React from 'react'\r\nimport { Box, Paper, Typography, Button, useMediaQuery } from \"@mui/material\"\r\nimport moment from 'moment'\r\nimport PropTypes from \"prop-types\"\r\nimport getWeatherIconPath from '../../utils/getWeatherIconPath'\r\nimport DeviceThermostatIcon from '@mui/icons-material/DeviceThermostat';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport currentForecastBackground from \"../../assets/images/currentForecastBackground.png\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { addToFavorite, removeFromFavorite } from '../../feature/favoriteSlice'\r\n\r\nconst dashboardHeaderWrapper = {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItem: 'center',\r\n    justifyContent: 'space-between',\r\n    p: 2,\r\n    maxHeight: 200,\r\n    mb: 15\r\n}\r\n\r\n\r\nconst dashboardHeaderMobileWrapper = {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItem: 'center',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'column',\r\n    height: 300,\r\n    p: 2,\r\n    mb: 15\r\n}\r\n\r\nconst currentForecastStyle = {\r\n    p: 4,\r\n    backgroundImage: `url(${currentForecastBackground})`,\r\n    color: '#ffffff',\r\n    width: '70%',\r\n    minWidth: 400,\r\n    position: 'relative' ,\r\n    display: 'flex',\r\n    alignItem: 'center',\r\n    minHeight: 300,\r\n    justifyContent: 'space-between',\r\n    pt: 8\r\n}\r\n\r\nconst dashboardActionStyle = {\r\n    p: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-evenly'\r\n}\r\n\r\nconst dashboardActionMobileStyle = {\r\n    mt: 4,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItem: 'center',\r\n    width: '100%'\r\n}\r\n\r\nconst imageStyle = {\r\n    width: '180px',\r\n    height: '180px',\r\n    objectFit: 'contain',\r\n    position: 'absolute',\r\n    top: -90 \r\n}\r\n\r\nconst temperatureStyle = {\r\n    minWidth: 150,\r\n    height: '75%',\r\n    display: 'flex',\r\n    alignItem: 'center',\r\n    justifyContent: 'center',\r\n   flexDirection: 'column',\r\n   fontSize: '3rem',\r\n}\r\n\r\nconst DashboardHeader = ({ temperatureSymbol, currentLocation, temperatureUnit, toggleTemperatureUnit, currentForecast }) => {\r\n    const dispatch = useDispatch()\r\n    const { locations } = useSelector(state => state.favorite)\r\n    const isMobile = useMediaQuery(theme => theme.breakpoints.down('sm'))\r\n\r\n    const isSavedInLocalStorage = locations.some(el => el.Key === currentLocation.Key)\r\n\r\n    const handleFavoriteClick = () => {\r\n        if(isSavedInLocalStorage){\r\n            dispatch(removeFromFavorite(currentLocation.Key))\r\n        }else{\r\n            dispatch(addToFavorite(currentLocation))\r\n        }\r\n    }\r\n\r\n  return (\r\n    <Box sx={isMobile ? dashboardHeaderMobileWrapper : dashboardHeaderWrapper} >\r\n        <Paper elevation={3} sx={currentForecastStyle} >\r\n            <img style={imageStyle}  src={getWeatherIconPath(currentForecast.WeatherIcon)} alt=\"\" />\r\n            <Typography variant='h4' >\r\n                {currentLocation.LocalizedName}, {currentLocation.Country.LocalizedName}\r\n                <br/>\r\n                {moment(currentLocation.LocalObservationDateTime).calendar()}\r\n            </Typography>\r\n            <Typography component='div' style={temperatureStyle}  >\r\n                {currentForecast.Temperature[temperatureUnit].Value} {temperatureSymbol}\r\n                <br/>\r\n                {currentForecast.WeatherText}\r\n            </Typography>\r\n            \r\n        </Paper>\r\n        <Box sx={isMobile ? dashboardActionMobileStyle : dashboardActionStyle} >\r\n            <Button startIcon={<DeviceThermostatIcon/>} onClick={toggleTemperatureUnit} variant=\"outlined\" >\r\n                {temperatureUnit !== 'Imperial' ? 'Fahrenheit' : 'Celsius'}\r\n            </Button>\r\n            <Button onClick={handleFavoriteClick} variant='contained' startIcon={isSavedInLocalStorage ? <RemoveIcon/> : <AddIcon/>} >\r\n                {isSavedInLocalStorage ? \"Remove Favorite\" : \"Add To Favorite\"}\r\n            </Button>\r\n        </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nDashboardHeader.propTypes = {\r\n    currentLocation: PropTypes.object,\r\n    currentForecast: PropTypes.object,\r\n    temperatureUnit: PropTypes.string,\r\n    toggleTemperatureUnit: PropTypes.func,\r\n    temperatureSymbol: PropTypes.string\r\n}\r\n\r\nexport default DashboardHeader","export default (fahrenheit) => {\r\n    return Math.round((fahrenheit - 32) / 1.8)\r\n}","import React from 'react'\r\nimport {TableContainer, Table, TableBody, TableCell, TableHead, TableRow, Paper } from '@mui/material'\r\nimport moment from \"moment\"\r\nimport getWeatherIconPath from '../../utils/getWeatherIconPath'\r\nimport convertFahrenheitToCelsius from \"../../utils/convertFahrenheitToCelsius\"\r\nimport PropTypes from \"prop-types\" \r\n\r\nconst tableHeaderValues = [\r\n    \"Date\", \"Day\", \"Forecast\", \"Night\", \"Forecast\", \"Minimum\", \"Maximum\" \r\n]\r\n\r\nconst DashboardTable = ({ forecastByDays, temperatureUnit }) => {\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }} >\r\n    <TableContainer sx={{ maxHeight: 440 }} >\r\n        <Table stickyHeader >\r\n        <TableHead>\r\n            <TableRow>\r\n                {tableHeaderValues.map((title, index) => (\r\n                    <TableCell  key={index} >{title}</TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            {forecastByDays.map((dayForecast, index) => (\r\n                <TableRow>\r\n                    <TableCell >{moment(dayForecast.Date).format('dddd Do MMM')}</TableCell>\r\n                    <TableCell >\r\n                        <img src={getWeatherIconPath(dayForecast.Day.Icon)} alt=\"\" />\r\n                        \r\n                    </TableCell>\r\n                    <TableCell>{dayForecast.Day.IconPhrase}</TableCell>\r\n                    <TableCell >\r\n                        <img src={getWeatherIconPath(dayForecast.Night.Icon)} alt=\"\" />\r\n                    </TableCell>\r\n                    <TableCell>{dayForecast.Night.IconPhrase}</TableCell>\r\n                    <TableCell >{temperatureUnit === 'Imperial' ? \r\n                    `${dayForecast.Temperature.Minimum.Value} ℉` :\r\n                     `${convertFahrenheitToCelsius(dayForecast.Temperature.Minimum.Value)} ℃`}\r\n                    </TableCell>\r\n                    <TableCell >{temperatureUnit === 'Imperial' ? \r\n                    `${dayForecast.Temperature.Maximum.Value} ℉` :\r\n                    `${convertFahrenheitToCelsius(dayForecast.Temperature.Maximum.Value)} ℃`}\r\n                    </TableCell>\r\n                </TableRow>\r\n            ))}\r\n        </TableBody>\r\n        </Table>\r\n    </TableContainer>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nDashboardTable.propTypes = {\r\n    forecastByDays: PropTypes.array,\r\n    temperatureUnit: PropTypes.string\r\n}\r\n\r\nexport default DashboardTable","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Tabs, Tab, Box } from \"@mui/material\"\r\nimport DashboardTable from './DashboardTable'\r\nimport { useDispatch } from \"react-redux\"\r\nimport { fetchDaysForecastsByLocationKeyAndDays } from \"../../feature/forecastSlice\"\r\n\r\nconst tabWrapperStyle = { \r\n    borderBottom: 1, \r\n    borderColor: 'divider',\r\n    mt: 5\r\n}\r\n\r\nconst DashboardBody = ({ temperatureUnit, forecastByDays, currentLocation, temperatureSymbol }) => {\r\n    const dispatch = useDispatch()\r\n    const [ daysOfForecast, setDaysOfForecast ] = useState(5)\r\n\r\n    const handleTabChange = (event, numberOfDays) => {\r\n        setDaysOfForecast(numberOfDays)\r\n        dispatch(fetchDaysForecastsByLocationKeyAndDays({locationKey: currentLocation.Key, numberOfDays}))\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <Box sx={tabWrapperStyle}>\r\n        <Tabs value={daysOfForecast} onChange={handleTabChange} variant=\"fullWidth\">\r\n            <Tab label=\"5 Days\" value={5} />\r\n            <Tab label=\"10 Days (unavailable)\" value={10} disabled />\r\n            <Tab label=\"15 Days (unavailable)\" value={15} disabled />\r\n        </Tabs>\r\n    </Box>\r\n    <DashboardTable  temperatureSymbol={temperatureSymbol} temperatureUnit={temperatureUnit} forecastByDays={forecastByDays} />\r\n    </>\r\n  )\r\n}\r\n\r\nDashboardBody.propTypes = {\r\n    temperatureUnit: PropTypes.string,\r\n    forecastByDays: PropTypes.array,\r\n    currentLocation: PropTypes.object,\r\n    temperatureSymbol: PropTypes.string\r\n}\r\n\r\nexport default DashboardBody","import React, { useEffect, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchDaysForecastsByLocationKeyAndDays, fetchLocationCurrentConditionsByLocationKey } from '../feature/forecastSlice'\r\nimport useToggleTemperatureUnit from \"../hooks/useToggleTemperatureUnit\"\r\nimport { Box } from \"@mui/material\"\r\nimport DashboardHeader from '../components/dashboard/DashboardHeader'\r\nimport DashboardBody from '../components/dashboard/DashboardBody'\r\nimport weatherApi from '../app/services/weatherApi'\r\nimport { setCurrentLocation, setCurrentLocationByName } from \"../feature/locationSlice\"\r\nimport useGeolocation from '../hooks/useGeolocation'\r\n\r\nconst homeWrapperStyle = {\r\n  bgcolor: 'background.paper',\r\n  height: '85vh',\r\n  mt: 10,\r\n  p: 5,\r\n}\r\n\r\nconst DEFAULT_LOCATION_KEY = '215854'\r\nconst DEFAULT_LOCATION_NAME = 'tel aviv'\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch()\r\n  const state = useSelector(state => state)\r\n  const { currentLocation } = state.locations\r\n  const { currentForecast, forecastByDays } = state.forecast\r\n  const [ temperatureUnit, temperatureSymbol, toggleTemperatureUnit ] = useToggleTemperatureUnit()\r\n  const geolocationRender = useRef(null)\r\n  const [latitude, longitude, geolocationStatus] = useGeolocation(geolocationRender)\r\n  const isHomePageInit = useRef(false)\r\n\r\n  const dispatchCurrentLocationActions = (currentLocation) => {\r\n    dispatch(setCurrentLocation(currentLocation))\r\n    dispatch(fetchLocationCurrentConditionsByLocationKey(currentLocation.Key))\r\n    dispatch(fetchDaysForecastsByLocationKeyAndDays({locationKey: currentLocation.Key}))\r\n  }\r\n\r\n  const initialApplicationByGeolocation = async (geolocation) => {\r\n    try {\r\n      const response = await weatherApi.fetchLocationKeyByGeolocation(geolocation)\r\n      const currentLocation = response.data\r\n      dispatchCurrentLocationActions(currentLocation)\r\n    } catch (error) {\r\n      initialApplicationByDefaultLocation()\r\n    }\r\n  }\r\n\r\n  const initialApplicationByDefaultLocation = () => {\r\n    dispatch(setCurrentLocationByName(DEFAULT_LOCATION_NAME))\r\n    dispatch(fetchLocationCurrentConditionsByLocationKey(DEFAULT_LOCATION_KEY))\r\n    dispatch(fetchDaysForecastsByLocationKeyAndDays({locationKey: DEFAULT_LOCATION_KEY}))\r\n  }\r\n\r\n  useEffect(() => {\r\n      if(isHomePageInit.current === false){ \r\n        if(latitude && longitude && geolocationStatus === 'success'){\r\n          initialApplicationByGeolocation({latitude, longitude})\r\n          isHomePageInit.current = true\r\n        }else if(geolocationStatus === 'Unable to retrieve your location') {\r\n          initialApplicationByDefaultLocation()\r\n          isHomePageInit.current = true\r\n        }\r\n      }else {\r\n        dispatchCurrentLocationActions(currentLocation)\r\n      }\r\n  }, [geolocationRender.current])\r\n\r\n  return (\r\n    <Box sx={homeWrapperStyle} >\r\n      <DashboardHeader temperatureSymbol={temperatureSymbol} toggleTemperatureUnit={toggleTemperatureUnit} currentLocation={currentLocation} currentForecast={currentForecast} temperatureUnit={temperatureUnit}/>\r\n      <DashboardBody temperatureSymbol={temperatureSymbol} currentLocation={currentLocation} temperatureUnit={temperatureUnit} forecastByDays={forecastByDays} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Home","import { useState, useEffect, useCallback } from \"react\"\r\n\r\nexport default function useGeolocation(ref){\r\n    const [lat, setLat] = useState(null);\r\n    const [lng, setLng] = useState(null);\r\n    const [status, setStatus] = useState(null);\r\n  \r\n    const getLocation = useCallback(() => {\r\n      if (!navigator.geolocation) {\r\n        setStatus('Geolocation is not supported by your browser');\r\n      } else {\r\n        setStatus('Locating...');\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          setStatus('success');\r\n          setLat(position.coords.latitude);\r\n          setLng(position.coords.longitude);\r\n          ref.current = 'success'\r\n        }, () => {\r\n          setStatus('Unable to retrieve your location');\r\n          ref.current = 'Unable to retrieve your location'\r\n        });\r\n      }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getLocation()\r\n    }, [ref.current])\r\n\r\n    return [lat, lng, status]\r\n  \r\n}","import React, { useState, useEffect } from 'react'\r\nimport {Card, CardContent, CardActions, Typography, IconButton} from '@mui/material';\r\nimport PropTypes from \"prop-types\"\r\nimport weatherApi from '../../app/services/weatherApi';\r\nimport getWeatherIconPath from '../../utils/getWeatherIconPath';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport { useDispatch } from 'react-redux';\r\nimport displayErrorMessage from '../../utils/displayErrorMessage';\r\nimport { removeFromFavorite } from \"../../feature/favoriteSlice\"\r\n\r\nconst cardStyle = { \r\n  width: '100%',\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  p: 2\r\n}\r\n\r\nconst imageStyle = {\r\n  width: '150px',\r\n  height: '150px',\r\n  objectFit: 'contain'\r\n}\r\n\r\nconst FavoriteCard = ({ item, temperatureUnit, temperatureSymbol }) => {\r\n  const dispatch = useDispatch()\r\n  const [ currentForecast, setCurrentForecast ] = useState({\r\n    Temperature: {\r\n      Metric: {},\r\n      Imperial: {}\r\n  }})\r\n  \r\n  const fetchCurrentForecast = async () => {\r\n    try {\r\n      const { data } = await weatherApi.fetchLocationCurrentConditionsByLocationKey(item.Key)\r\n      setCurrentForecast(data[0])\r\n    } catch (error) {\r\n      displayErrorMessage()\r\n    }\r\n  } \r\n\r\n  const handleRemoveClick = () => {\r\n    dispatch(removeFromFavorite(currentForecast.Key))\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchCurrentForecast()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <Card variant=\"outlined\" sx={cardStyle} >\r\n      <CardContent>\r\n        <Typography gutterBottom textAlign='center' variant='h5' >\r\n          {item.LocalizedName}\r\n        </Typography>\r\n        <Typography textAlign='center' variant='subtitle1' color=\"text.secondary\" >\r\n          {item.Country.ID}, {item.Country.LocalizedName}\r\n        </Typography>\r\n        <img style={imageStyle} src={getWeatherIconPath(currentForecast.WeatherIcon)} alt=\"\" />\r\n        <Typography variant=\"h6\" textAlign='center'>\r\n          {currentForecast.WeatherText}\r\n        </Typography>\r\n        <Typography variant=\"h5\"  textAlign='center'>\r\n          {currentForecast.Temperature[temperatureUnit].Value} {temperatureSymbol}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <IconButton size=\"large\" onClick={handleRemoveClick} >\r\n          <DeleteOutlineIcon  sx={{ fontSize: \"40px\" }} />\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nFavoriteCard.propTypes = {\r\n    item: PropTypes.object,\r\n    temperatureUnit: PropTypes.string,\r\n    temperatureSymbol: PropTypes.string\r\n}\r\n\r\nexport default FavoriteCard","import React from 'react'\r\nimport { Grid, Box, Button } from \"@mui/material\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport FavoriteCard from \"../components/favoriteCard/FavoriteCard\"\r\nimport useToggleTemperatureUnit from \"../hooks/useToggleTemperatureUnit\"\r\nimport DeviceThermostatIcon from '@mui/icons-material/DeviceThermostat';\r\nimport DangerousIcon from '@mui/icons-material/Dangerous';\r\nimport { clearAllFavorite } from \"../feature/favoriteSlice\"\r\n\r\nconst favoriteStyle = {\r\n  width: '100%',\r\n  display: 'flex',\r\n  height: '70',\r\n  alignItems: 'flex-start',\r\n  py: 5,\r\n}\r\n\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '75vh',\r\n  mt: 9\r\n}\r\n\r\nconst Favorite = () => {\r\n  const [ temperatureUnit, temperatureSymbol, toggleTemperatureUnit ] = useToggleTemperatureUnit()\r\n  const dispatch = useDispatch()\r\n  const { locations } = useSelector(state => state.favorite)\r\n\r\n  const handleClearAllClick = () => {\r\n    dispatch(clearAllFavorite())\r\n  }\r\n\r\n  return (\r\n    <Box sx={containerStyle}>\r\n      <Box sx={favoriteStyle} >\r\n        <Button sx={{ mr: 1 }} startIcon={<DeviceThermostatIcon/>} onClick={toggleTemperatureUnit} variant=\"outlined\" >\r\n          {temperatureUnit !== 'Imperial' ? 'Fahrenheit' : 'Celsius'}\r\n        </Button>\r\n        <Button onClick={handleClearAllClick} disabled={!locations.length} variant='contained' startIcon={<DangerousIcon/>} >\r\n          Clear All \r\n        </Button>\r\n      </Box>\r\n      <Grid container spacing={3} >\r\n        {locations.map((item, index) => (\r\n          <Grid sx={{  minWidth: 300, minHeight: 300  }}  item key={index} xs={12} md={6} lg={4} xl={3} >\r\n            <FavoriteCard temperatureSymbol={temperatureSymbol} temperatureUnit={temperatureUnit} item={item} key={index} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Favorite","import React from 'react'\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div>Page Not found</div>\r\n  )\r\n}\r\n\r\nexport default Page404","import React from 'react'\nimport Layout from './layout/Layout'\nimport {  Routes, Route } from \"react-router-dom\"\nimport Home from \"./pages/Home\"\nimport Favorite from \"./pages/Favorite\"\nimport Page404 from \"./pages/Page404\"\nimport \"./assets/global.css\"\n\nconst App = () => {\n  return (\n    <div className='app'>\n    <Routes>\n      <Route element={<Layout/>}>\n        <Route index element={<Home/>} />\n        <Route path='home' element={<Home/>} />\n        <Route path='favorite' element={<Favorite/>} />\n        <Route path='*' element={<Page404/>} />\n      </Route>\n    </Routes>\n    </div>\n  )\n}\n\nexport default App","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport locationReducer  from \"../feature/locationSlice\"\r\nimport forecastReducer from \"../feature/forecastSlice\"\r\nimport favoriteReducer from \"../feature/favoriteSlice\"\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        locations: locationReducer,\r\n        forecast: forecastReducer,\r\n        favorite: favoriteReducer\r\n    }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, } from \"react-router-dom\"\nimport { ColorModeContextProvider } from \"./context/ColorModeContext\"\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <ColorModeContextProvider>\n        <BrowserRouter>\n          <App/>\n        </BrowserRouter>    \n      </ColorModeContextProvider>\n    </Provider>\n  </React.StrictMode>\n);"],"sourceRoot":""}